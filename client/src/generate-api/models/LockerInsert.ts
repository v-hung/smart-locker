/* tslint:disable */
/* eslint-disable */
/**
 * Smart Locker API
 * API quản lý tủ đồ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LockerInsert
 */
export interface LockerInsert {
    /**
     * 
     * @type {number}
     * @memberof LockerInsert
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof LockerInsert
     */
    lockerCode: string;
    /**
     * 
     * @type {string}
     * @memberof LockerInsert
     */
    location: string;
    /**
     * 
     * @type {string}
     * @memberof LockerInsert
     */
    status?: string;
    /**
     * 
     * @type {string}
     * @memberof LockerInsert
     */
    createdAt?: string;
    /**
     * 
     * @type {number}
     * @memberof LockerInsert
     */
    userId: number;
}

/**
 * Check if a given object implements the LockerInsert interface.
 */
export function instanceOfLockerInsert(value: object): value is LockerInsert {
    if (!('lockerCode' in value) || value['lockerCode'] === undefined) return false;
    if (!('location' in value) || value['location'] === undefined) return false;
    if (!('userId' in value) || value['userId'] === undefined) return false;
    return true;
}

export function LockerInsertFromJSON(json: any): LockerInsert {
    return LockerInsertFromJSONTyped(json, false);
}

export function LockerInsertFromJSONTyped(json: any, ignoreDiscriminator: boolean): LockerInsert {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'lockerCode': json['lockerCode'],
        'location': json['location'],
        'status': json['status'] == null ? undefined : json['status'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'userId': json['userId'],
    };
}

export function LockerInsertToJSON(json: any): LockerInsert {
    return LockerInsertToJSONTyped(json, false);
}

export function LockerInsertToJSONTyped(value?: LockerInsert | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'lockerCode': value['lockerCode'],
        'location': value['location'],
        'status': value['status'],
        'createdAt': value['createdAt'],
        'userId': value['userId'],
    };
}

