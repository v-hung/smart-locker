/* tslint:disable */
/* eslint-disable */
/**
 * Smart Locker API
 * API quản lý tủ đồ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaginatedLockerInputMeta } from './PaginatedLockerInputMeta';
import {
    PaginatedLockerInputMetaFromJSON,
    PaginatedLockerInputMetaFromJSONTyped,
    PaginatedLockerInputMetaToJSON,
    PaginatedLockerInputMetaToJSONTyped,
} from './PaginatedLockerInputMeta';
import type { BranchInput } from './BranchInput';
import {
    BranchInputFromJSON,
    BranchInputFromJSONTyped,
    BranchInputToJSON,
    BranchInputToJSONTyped,
} from './BranchInput';

/**
 * 
 * @export
 * @interface PaginatedBranchInput
 */
export interface PaginatedBranchInput {
    /**
     * 
     * @type {Array<BranchInput>}
     * @memberof PaginatedBranchInput
     */
    data: Array<BranchInput>;
    /**
     * 
     * @type {PaginatedLockerInputMeta}
     * @memberof PaginatedBranchInput
     */
    meta: PaginatedLockerInputMeta;
}

/**
 * Check if a given object implements the PaginatedBranchInput interface.
 */
export function instanceOfPaginatedBranchInput(value: object): value is PaginatedBranchInput {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    return true;
}

export function PaginatedBranchInputFromJSON(json: any): PaginatedBranchInput {
    return PaginatedBranchInputFromJSONTyped(json, false);
}

export function PaginatedBranchInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedBranchInput {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(BranchInputFromJSON)),
        'meta': PaginatedLockerInputMetaFromJSON(json['meta']),
    };
}

export function PaginatedBranchInputToJSON(json: any): PaginatedBranchInput {
    return PaginatedBranchInputToJSONTyped(json, false);
}

export function PaginatedBranchInputToJSONTyped(value?: PaginatedBranchInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(BranchInputToJSON)),
        'meta': PaginatedLockerInputMetaToJSON(value['meta']),
    };
}

