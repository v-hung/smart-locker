/* tslint:disable */
/* eslint-disable */
/**
 * Smart Locker API
 * API quản lý tủ đồ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaginatedLockerInputMeta } from './PaginatedLockerInputMeta';
import {
    PaginatedLockerInputMetaFromJSON,
    PaginatedLockerInputMetaFromJSONTyped,
    PaginatedLockerInputMetaToJSON,
    PaginatedLockerInputMetaToJSONTyped,
} from './PaginatedLockerInputMeta';
import type { UserInput } from './UserInput';
import {
    UserInputFromJSON,
    UserInputFromJSONTyped,
    UserInputToJSON,
    UserInputToJSONTyped,
} from './UserInput';

/**
 * 
 * @export
 * @interface PaginatedUserInput
 */
export interface PaginatedUserInput {
    /**
     * 
     * @type {Array<UserInput>}
     * @memberof PaginatedUserInput
     */
    data: Array<UserInput>;
    /**
     * 
     * @type {PaginatedLockerInputMeta}
     * @memberof PaginatedUserInput
     */
    meta: PaginatedLockerInputMeta;
}

/**
 * Check if a given object implements the PaginatedUserInput interface.
 */
export function instanceOfPaginatedUserInput(value: object): value is PaginatedUserInput {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    return true;
}

export function PaginatedUserInputFromJSON(json: any): PaginatedUserInput {
    return PaginatedUserInputFromJSONTyped(json, false);
}

export function PaginatedUserInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedUserInput {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(UserInputFromJSON)),
        'meta': PaginatedLockerInputMetaFromJSON(json['meta']),
    };
}

export function PaginatedUserInputToJSON(json: any): PaginatedUserInput {
    return PaginatedUserInputToJSONTyped(json, false);
}

export function PaginatedUserInputToJSONTyped(value?: PaginatedUserInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(UserInputToJSON)),
        'meta': PaginatedLockerInputMetaToJSON(value['meta']),
    };
}

