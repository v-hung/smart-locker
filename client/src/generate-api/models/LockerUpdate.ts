/* tslint:disable */
/* eslint-disable */
/**
 * Smart Locker API
 * API quản lý tủ đồ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LockerUpdate
 */
export interface LockerUpdate {
    /**
     * 
     * @type {number}
     * @memberof LockerUpdate
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    lockerCode?: string;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    area?: string | null;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    size?: LockerUpdateSizeEnum;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    type?: LockerUpdateTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    lockType?: LockerUpdateLockTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    status?: LockerUpdateStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    createdAt?: string;
    /**
     * 
     * @type {number}
     * @memberof LockerUpdate
     */
    userId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof LockerUpdate
     */
    branchId?: number | null;
}


/**
 * @export
 */
export const LockerUpdateSizeEnum = {
    S: 's',
    M: 'm',
    L: 'l',
    Xl: 'xl'
} as const;
export type LockerUpdateSizeEnum = typeof LockerUpdateSizeEnum[keyof typeof LockerUpdateSizeEnum];

/**
 * @export
 */
export const LockerUpdateTypeEnum = {
    Standard: 'standard',
    Smart: 'smart'
} as const;
export type LockerUpdateTypeEnum = typeof LockerUpdateTypeEnum[keyof typeof LockerUpdateTypeEnum];

/**
 * @export
 */
export const LockerUpdateLockTypeEnum = {
    Key: 'key',
    Card: 'card',
    Pin: 'pin',
    Biometric: 'biometric'
} as const;
export type LockerUpdateLockTypeEnum = typeof LockerUpdateLockTypeEnum[keyof typeof LockerUpdateLockTypeEnum];

/**
 * @export
 */
export const LockerUpdateStatusEnum = {
    Available: 'available',
    InUse: 'in_use',
    Maintenance: 'maintenance',
    Broken: 'broken'
} as const;
export type LockerUpdateStatusEnum = typeof LockerUpdateStatusEnum[keyof typeof LockerUpdateStatusEnum];


/**
 * Check if a given object implements the LockerUpdate interface.
 */
export function instanceOfLockerUpdate(value: object): value is LockerUpdate {
    return true;
}

export function LockerUpdateFromJSON(json: any): LockerUpdate {
    return LockerUpdateFromJSONTyped(json, false);
}

export function LockerUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): LockerUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'lockerCode': json['lockerCode'] == null ? undefined : json['lockerCode'],
        'area': json['area'] == null ? undefined : json['area'],
        'size': json['size'] == null ? undefined : json['size'],
        'type': json['type'] == null ? undefined : json['type'],
        'lockType': json['lockType'] == null ? undefined : json['lockType'],
        'status': json['status'] == null ? undefined : json['status'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'userId': json['userId'] == null ? undefined : json['userId'],
        'branchId': json['branchId'] == null ? undefined : json['branchId'],
    };
}

export function LockerUpdateToJSON(json: any): LockerUpdate {
    return LockerUpdateToJSONTyped(json, false);
}

export function LockerUpdateToJSONTyped(value?: LockerUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'lockerCode': value['lockerCode'],
        'area': value['area'],
        'size': value['size'],
        'type': value['type'],
        'lockType': value['lockType'],
        'status': value['status'],
        'createdAt': value['createdAt'],
        'userId': value['userId'],
        'branchId': value['branchId'],
    };
}

