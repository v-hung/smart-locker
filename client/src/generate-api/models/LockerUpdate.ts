/* tslint:disable */
/* eslint-disable */
/**
 * Smart Locker API
 * API quản lý tủ đồ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LockerUpdate
 */
export interface LockerUpdate {
    /**
     * 
     * @type {number}
     * @memberof LockerUpdate
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    lockerCode?: string;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    location?: string;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    status?: LockerUpdateStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof LockerUpdate
     */
    createdAt?: string;
    /**
     * 
     * @type {number}
     * @memberof LockerUpdate
     */
    userId?: number | null;
}


/**
 * @export
 */
export const LockerUpdateStatusEnum = {
    Available: 'available',
    InUse: 'in_use',
    Maintenance: 'maintenance'
} as const;
export type LockerUpdateStatusEnum = typeof LockerUpdateStatusEnum[keyof typeof LockerUpdateStatusEnum];


/**
 * Check if a given object implements the LockerUpdate interface.
 */
export function instanceOfLockerUpdate(value: object): value is LockerUpdate {
    return true;
}

export function LockerUpdateFromJSON(json: any): LockerUpdate {
    return LockerUpdateFromJSONTyped(json, false);
}

export function LockerUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): LockerUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'lockerCode': json['lockerCode'] == null ? undefined : json['lockerCode'],
        'location': json['location'] == null ? undefined : json['location'],
        'status': json['status'] == null ? undefined : json['status'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'userId': json['userId'] == null ? undefined : json['userId'],
    };
}

export function LockerUpdateToJSON(json: any): LockerUpdate {
    return LockerUpdateToJSONTyped(json, false);
}

export function LockerUpdateToJSONTyped(value?: LockerUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'lockerCode': value['lockerCode'],
        'location': value['location'],
        'status': value['status'],
        'createdAt': value['createdAt'],
        'userId': value['userId'],
    };
}

