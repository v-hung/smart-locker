/* tslint:disable */
/* eslint-disable */
/**
 * Smart Locker API
 * API quản lý tủ đồ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserInput
 */
export interface UserInput {
    /**
     * 
     * @type {number}
     * @memberof UserInput
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof UserInput
     */
    fullName: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserInput
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof UserInput
     */
    role: UserInputRoleEnum;
    /**
     * 
     * @type {string}
     * @memberof UserInput
     */
    createdAt: string;
}


/**
 * @export
 */
export const UserInputRoleEnum = {
    Guest: 'guest',
    User: 'user',
    Admin: 'admin'
} as const;
export type UserInputRoleEnum = typeof UserInputRoleEnum[keyof typeof UserInputRoleEnum];


/**
 * Check if a given object implements the UserInput interface.
 */
export function instanceOfUserInput(value: object): value is UserInput {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function UserInputFromJSON(json: any): UserInput {
    return UserInputFromJSONTyped(json, false);
}

export function UserInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInput {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'fullName': json['fullName'],
        'email': json['email'],
        'role': json['role'],
        'createdAt': json['createdAt'],
    };
}

export function UserInputToJSON(json: any): UserInput {
    return UserInputToJSONTyped(json, false);
}

export function UserInputToJSONTyped(value?: UserInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'fullName': value['fullName'],
        'email': value['email'],
        'role': value['role'],
        'createdAt': value['createdAt'],
    };
}

