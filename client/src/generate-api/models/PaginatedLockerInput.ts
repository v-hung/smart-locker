/* tslint:disable */
/* eslint-disable */
/**
 * Smart Locker API
 * API quản lý tủ đồ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaginatedLockerInputMeta } from './PaginatedLockerInputMeta';
import {
    PaginatedLockerInputMetaFromJSON,
    PaginatedLockerInputMetaFromJSONTyped,
    PaginatedLockerInputMetaToJSON,
    PaginatedLockerInputMetaToJSONTyped,
} from './PaginatedLockerInputMeta';
import type { LockerInput } from './LockerInput';
import {
    LockerInputFromJSON,
    LockerInputFromJSONTyped,
    LockerInputToJSON,
    LockerInputToJSONTyped,
} from './LockerInput';

/**
 * 
 * @export
 * @interface PaginatedLockerInput
 */
export interface PaginatedLockerInput {
    /**
     * 
     * @type {Array<LockerInput>}
     * @memberof PaginatedLockerInput
     */
    data: Array<LockerInput>;
    /**
     * 
     * @type {PaginatedLockerInputMeta}
     * @memberof PaginatedLockerInput
     */
    meta: PaginatedLockerInputMeta;
}

/**
 * Check if a given object implements the PaginatedLockerInput interface.
 */
export function instanceOfPaginatedLockerInput(value: object): value is PaginatedLockerInput {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    return true;
}

export function PaginatedLockerInputFromJSON(json: any): PaginatedLockerInput {
    return PaginatedLockerInputFromJSONTyped(json, false);
}

export function PaginatedLockerInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedLockerInput {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(LockerInputFromJSON)),
        'meta': PaginatedLockerInputMetaFromJSON(json['meta']),
    };
}

export function PaginatedLockerInputToJSON(json: any): PaginatedLockerInput {
    return PaginatedLockerInputToJSONTyped(json, false);
}

export function PaginatedLockerInputToJSONTyped(value?: PaginatedLockerInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(LockerInputToJSON)),
        'meta': PaginatedLockerInputMetaToJSON(value['meta']),
    };
}

