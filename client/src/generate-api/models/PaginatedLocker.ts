/* tslint:disable */
/* eslint-disable */
/**
 * Smart Locker API
 * API quản lý tủ đồ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaginatedLockerMeta } from './PaginatedLockerMeta';
import {
    PaginatedLockerMetaFromJSON,
    PaginatedLockerMetaFromJSONTyped,
    PaginatedLockerMetaToJSON,
    PaginatedLockerMetaToJSONTyped,
} from './PaginatedLockerMeta';
import type { Locker } from './Locker';
import {
    LockerFromJSON,
    LockerFromJSONTyped,
    LockerToJSON,
    LockerToJSONTyped,
} from './Locker';

/**
 * 
 * @export
 * @interface PaginatedLocker
 */
export interface PaginatedLocker {
    /**
     * 
     * @type {Array<Locker>}
     * @memberof PaginatedLocker
     */
    data: Array<Locker>;
    /**
     * 
     * @type {PaginatedLockerMeta}
     * @memberof PaginatedLocker
     */
    meta: PaginatedLockerMeta;
}

/**
 * Check if a given object implements the PaginatedLocker interface.
 */
export function instanceOfPaginatedLocker(value: object): value is PaginatedLocker {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    return true;
}

export function PaginatedLockerFromJSON(json: any): PaginatedLocker {
    return PaginatedLockerFromJSONTyped(json, false);
}

export function PaginatedLockerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedLocker {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(LockerFromJSON)),
        'meta': PaginatedLockerMetaFromJSON(json['meta']),
    };
}

export function PaginatedLockerToJSON(json: any): PaginatedLocker {
    return PaginatedLockerToJSONTyped(json, false);
}

export function PaginatedLockerToJSONTyped(value?: PaginatedLocker | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(LockerToJSON)),
        'meta': PaginatedLockerMetaToJSON(value['meta']),
    };
}

