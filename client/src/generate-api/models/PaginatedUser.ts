/* tslint:disable */
/* eslint-disable */
/**
 * Smart Locker API
 * API quản lý tủ đồ
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaginatedLockerMeta } from './PaginatedLockerMeta';
import {
    PaginatedLockerMetaFromJSON,
    PaginatedLockerMetaFromJSONTyped,
    PaginatedLockerMetaToJSON,
    PaginatedLockerMetaToJSONTyped,
} from './PaginatedLockerMeta';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * 
 * @export
 * @interface PaginatedUser
 */
export interface PaginatedUser {
    /**
     * 
     * @type {Array<User>}
     * @memberof PaginatedUser
     */
    data: Array<User>;
    /**
     * 
     * @type {PaginatedLockerMeta}
     * @memberof PaginatedUser
     */
    meta: PaginatedLockerMeta;
}

/**
 * Check if a given object implements the PaginatedUser interface.
 */
export function instanceOfPaginatedUser(value: object): value is PaginatedUser {
    if (!('data' in value) || value['data'] === undefined) return false;
    if (!('meta' in value) || value['meta'] === undefined) return false;
    return true;
}

export function PaginatedUserFromJSON(json: any): PaginatedUser {
    return PaginatedUserFromJSONTyped(json, false);
}

export function PaginatedUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedUser {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(UserFromJSON)),
        'meta': PaginatedLockerMetaFromJSON(json['meta']),
    };
}

export function PaginatedUserToJSON(json: any): PaginatedUser {
    return PaginatedUserToJSONTyped(json, false);
}

export function PaginatedUserToJSONTyped(value?: PaginatedUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(UserToJSON)),
        'meta': PaginatedLockerMetaToJSON(value['meta']),
    };
}

